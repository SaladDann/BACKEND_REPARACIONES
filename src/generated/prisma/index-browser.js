
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.8.2
 * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
 */
Prisma.prismaVersion = {
  client: "6.8.2",
  engine: "2060c79ba17c6bb9f5823312b6f6b7f4a845738e"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.Tb_clienteScalarFieldEnum = {
  ID_Cliente: 'ID_Cliente',
  Cedula: 'Cedula',
  Nombres: 'Nombres',
  Apellidos: 'Apellidos',
  Telefono: 'Telefono',
  Email: 'Email',
  Direccion: 'Direccion'
};

exports.Prisma.Tb_tecnicoScalarFieldEnum = {
  ID_Tecnico: 'ID_Tecnico',
  Cedula: 'Cedula',
  Nombres: 'Nombres',
  Apellidos: 'Apellidos',
  Telefono: 'Telefono',
  Email: 'Email',
  Especialidad: 'Especialidad'
};

exports.Prisma.Tb_usuarioScalarFieldEnum = {
  ID_Usuario: 'ID_Usuario',
  Usuario_Name: 'Usuario_Name',
  Usuario_Password: 'Usuario_Password',
  Usuario_nivel: 'Usuario_nivel',
  Usuario_activo: 'Usuario_activo',
  ID_Cliente: 'ID_Cliente',
  ID_Tecnico: 'ID_Tecnico'
};

exports.Prisma.Tb_equipoScalarFieldEnum = {
  ID_Equipo: 'ID_Equipo',
  ID_Cliente: 'ID_Cliente',
  Nombre: 'Nombre',
  Marca: 'Marca',
  Modelo: 'Modelo',
  Descripcion_problema: 'Descripcion_problema',
  Estado: 'Estado'
};

exports.Prisma.Tb_repuestoScalarFieldEnum = {
  ID_Repuesto: 'ID_Repuesto',
  Nombre: 'Nombre',
  Precio: 'Precio'
};

exports.Prisma.Tb_reparacionScalarFieldEnum = {
  ID_Reparacion: 'ID_Reparacion',
  ID_Cliente: 'ID_Cliente',
  ID_Tecnico: 'ID_Tecnico',
  ID_Equipo: 'ID_Equipo',
  Fecha_Ingreso: 'Fecha_Ingreso',
  Fecha_Entrega: 'Fecha_Entrega',
  CostoServicio: 'CostoServicio',
  IVA: 'IVA',
  Total: 'Total'
};

exports.Prisma.Tb_detalle_reparacion_repuestoScalarFieldEnum = {
  ID_Detalle: 'ID_Detalle',
  ID_Reparacion: 'ID_Reparacion',
  ID_Repuesto: 'ID_Repuesto',
  Cantidad: 'Cantidad',
  Subtotal: 'Subtotal'
};

exports.Prisma.Tb_estado_reparacionScalarFieldEnum = {
  ID_Estado: 'ID_Estado',
  ID_Reparacion: 'ID_Reparacion',
  FechaHora: 'FechaHora',
  Estado: 'Estado',
  Descripcion: 'Descripcion',
  Requiere_Aprobacion: 'Requiere_Aprobacion',
  Aprobado: 'Aprobado',
  ID_Usuario_Aprobado: 'ID_Usuario_Aprobado',
  Fecha_Aprobacion: 'Fecha_Aprobacion'
};

exports.Prisma.Tb_facturaScalarFieldEnum = {
  ID_Factura: 'ID_Factura',
  ID_Reparacion: 'ID_Reparacion',
  Fecha_Emision: 'Fecha_Emision',
  Subtotal: 'Subtotal',
  IVA: 'IVA',
  Total: 'Total',
  Metodo_Pago: 'Metodo_Pago',
  Estado: 'Estado'
};

exports.Prisma.Tb_notificacionScalarFieldEnum = {
  ID_Notificacion: 'ID_Notificacion',
  ID_Usuario: 'ID_Usuario',
  Tipo: 'Tipo',
  Mensaje: 'Mensaje',
  Estado_Leido: 'Estado_Leido',
  Fecha: 'Fecha'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.tb_clienteOrderByRelevanceFieldEnum = {
  Cedula: 'Cedula',
  Nombres: 'Nombres',
  Apellidos: 'Apellidos',
  Telefono: 'Telefono',
  Email: 'Email',
  Direccion: 'Direccion'
};

exports.Prisma.tb_tecnicoOrderByRelevanceFieldEnum = {
  Cedula: 'Cedula',
  Nombres: 'Nombres',
  Apellidos: 'Apellidos',
  Telefono: 'Telefono',
  Email: 'Email',
  Especialidad: 'Especialidad'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.tb_usuarioOrderByRelevanceFieldEnum = {
  Usuario_Name: 'Usuario_Name',
  Usuario_Password: 'Usuario_Password'
};

exports.Prisma.tb_equipoOrderByRelevanceFieldEnum = {
  Nombre: 'Nombre',
  Marca: 'Marca',
  Modelo: 'Modelo',
  Descripcion_problema: 'Descripcion_problema',
  Estado: 'Estado'
};

exports.Prisma.tb_repuestoOrderByRelevanceFieldEnum = {
  Nombre: 'Nombre'
};

exports.Prisma.tb_estado_reparacionOrderByRelevanceFieldEnum = {
  Estado: 'Estado',
  Descripcion: 'Descripcion'
};

exports.Prisma.tb_facturaOrderByRelevanceFieldEnum = {
  Metodo_Pago: 'Metodo_Pago',
  Estado: 'Estado'
};

exports.Prisma.tb_notificacionOrderByRelevanceFieldEnum = {
  Tipo: 'Tipo',
  Mensaje: 'Mensaje'
};
exports.tb_usuario_Usuario_nivel = exports.$Enums.tb_usuario_Usuario_nivel = {
  Cliente: 'Cliente',
  Tecnico: 'Tecnico',
  Admin: 'Admin'
};

exports.Prisma.ModelName = {
  tb_cliente: 'tb_cliente',
  tb_tecnico: 'tb_tecnico',
  tb_usuario: 'tb_usuario',
  tb_equipo: 'tb_equipo',
  tb_repuesto: 'tb_repuesto',
  tb_reparacion: 'tb_reparacion',
  tb_detalle_reparacion_repuesto: 'tb_detalle_reparacion_repuesto',
  tb_estado_reparacion: 'tb_estado_reparacion',
  tb_factura: 'tb_factura',
  tb_notificacion: 'tb_notificacion'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
