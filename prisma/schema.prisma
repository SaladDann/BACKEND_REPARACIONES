generator client {
  provider = "prisma-client-js"
  output    = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url       = env("DATABASE_URL")
}

model tb_cliente {
  ID_Cliente Int      @id @default(autoincrement())
  Cedula     String?   @db.VarChar(20)
  Nombres    String?   @db.VarChar(100)
  Apellidos  String?   @db.VarChar(100)
  Telefono   String?   @db.VarChar(20)
  Email      String?   @db.VarChar(100)
  Direccion  String?   @db.VarChar(150)

  equipos      tb_equipo[]
  reparaciones tb_reparacion[]
  usuarios     tb_usuario[]
  tb_notificacion tb_notificacion[]

  @@index([ID_Cliente], map: "idx_cliente_id")
}

model tb_detalle_reparacion_repuesto {
  ID_Detalle    Int     @id @default(autoincrement())
  ID_Reparacion Int?
  ID_Repuesto   Int?
  Cantidad      Int?
  Subtotal      Decimal? @db.Decimal(10, 2)

  reparacion tb_reparacion? @relation(fields: [ID_Reparacion], references: [ID_Reparacion], onDelete: Cascade)
  repuesto   tb_repuesto?   @relation(fields: [ID_Repuesto], references: [ID_Repuesto])

  @@index([ID_Detalle], map: "idx_detalle_id")
  @@index([ID_Reparacion])
  @@index([ID_Repuesto])
}

model tb_equipo {
  ID_Equipo             Int      @id @default(autoincrement())
  ID_Cliente            Int?
  Nombre                String?  @db.VarChar(100)
  Marca                 String?  @db.VarChar(100)
  Modelo                String?  @db.VarChar(100)
  Descripcion_problema String?  @db.Text
  Estado                String?  @db.VarChar(50)

  cliente     tb_cliente?   @relation(fields: [ID_Cliente], references: [ID_Cliente])
  reparaciones tb_reparacion[]

  @@index([ID_Equipo], map: "idx_equipo_id")
  @@index([ID_Cliente])
}

model tb_estado_reparacion {
  ID_Estado           Int       @id @default(autoincrement())
  ID_Reparacion       Int?
  FechaHora           DateTime? @default(now()) @db.DateTime(0)
  Estado              String?   @db.VarChar(100)
  Descripcion         String?   @db.Text
  Requiere_Aprobacion Boolean?  @default(false)
  Aprobado            Boolean?
  ID_Usuario_Aprobado Int?
  Fecha_Aprobacion    DateTime? @db.DateTime(0)

  reparacion      tb_reparacion? @relation(fields: [ID_Reparacion], references: [ID_Reparacion], onDelete: Cascade)
  usuario_aprobador tb_usuario?  @relation("UsuarioAprobador", fields: [ID_Usuario_Aprobado], references: [ID_Usuario])

  @@index([ID_Estado], map: "idx_estado_id")
  @@index([ID_Reparacion])
  @@index([ID_Usuario_Aprobado])
}

model tb_factura {
  ID_Factura    Int       @id @default(autoincrement())
  ID_Reparacion Int?      @unique(map: "ID_Reparacion")
  Fecha_Emision DateTime? @default(now()) @db.DateTime(0)
  Subtotal      Decimal?  @db.Decimal(10, 2)
  IVA           Decimal?  @db.Decimal(10, 2)
  Total         Decimal?  @db.Decimal(10, 2)
  Metodo_Pago   String?   @db.VarChar(50)
  Estado        String?   @db.VarChar(50)

  reparacion tb_reparacion? @relation(fields: [ID_Reparacion], references: [ID_Reparacion], onDelete: Cascade)

  @@index([ID_Factura], map: "idx_factura_id")
  @@index([ID_Reparacion])
}

model tb_notificacion {
  ID_Notificacion Int       @id @default(autoincrement())
  ID_Cliente      Int?
  ID_Reparacion   Int?
  ID_Usuario      Int?
  Mensaje         String?   @db.Text
  Fecha_Envio     DateTime? @default(now()) @db.DateTime(0)
  Enviado         Boolean?  @default(false)
  Tipo            String?   @db.VarChar(50)
  Tipo_Cambio     String?   @db.VarChar(50)
  Aprobado        Boolean?
  Datos_Cambio    Json?

  cliente     tb_cliente?   @relation(fields: [ID_Cliente], references: [ID_Cliente])
  reparacion  tb_reparacion? @relation(fields: [ID_Reparacion], references: [ID_Reparacion], onDelete: Cascade)
  usuario     tb_usuario?    @relation(fields: [ID_Usuario], references: [ID_Usuario])

  @@index([ID_Notificacion], map: "idx_notificacion_id")
  @@index([ID_Cliente])
  @@index([ID_Reparacion])
  @@index([ID_Usuario])
}

model tb_reparacion {
  ID_Reparacion Int       @id @default(autoincrement())
  ID_Cliente    Int?
  ID_Tecnico    Int?
  ID_Equipo     Int?
  Fecha_Ingreso DateTime? @db.DateTime(0)
  Fecha_Entrega DateTime? @db.DateTime(0)
  CostoServicio Decimal?  @db.Decimal(10, 2)
  IVA           Decimal?  @db.Decimal(10, 2)
  Total         Decimal?  @db.Decimal(10, 2)

  cliente     tb_cliente?                  @relation(fields: [ID_Cliente], references: [ID_Cliente], onDelete: Cascade)
  tecnico     tb_tecnico?                  @relation(fields: [ID_Tecnico], references: [ID_Tecnico])
  equipo      tb_equipo?                   @relation(fields: [ID_Equipo], references: [ID_Equipo])
  estados     tb_estado_reparacion[]
  detalles    tb_detalle_reparacion_repuesto[]
  factura     tb_factura?
  tb_notificacion tb_notificacion[]

  @@index([ID_Reparacion], map: "idx_reparacion_id")
  @@index([ID_Cliente])
  @@index([ID_Equipo])
  @@index([ID_Tecnico])
}

model tb_repuesto {
  ID_Repuesto Int      @id @default(autoincrement())
  Nombre      String?  @db.VarChar(100)
  Precio      Decimal? @db.Decimal(10, 2)

  detalles tb_detalle_reparacion_repuesto[]

  @@index([ID_Repuesto], map: "idx_repuesto_id")
}

model tb_tecnico {
  ID_Tecnico   Int     @id @default(autoincrement())
  Cedula       String? @db.VarChar(20)
  Nombres      String? @db.VarChar(100)
  Apellidos    String? @db.VarChar(100)
  Telefono     String? @db.VarChar(20)
  Email        String? @db.VarChar(100)
  Especialidad String? @db.VarChar(100)

  reparaciones tb_reparacion[]
  usuarios     tb_usuario[]

  @@index([ID_Tecnico], map: "idx_tecnico_id")
}

model tb_usuario {
  ID_Usuario       Int                       @id @default(autoincrement())
  Usuario_Name     String?                    @unique(map: "Usuario_Name") @db.VarChar(50)
  Usuario_Password String?                    @db.VarChar(255)
  Usuario_nivel    tb_usuario_Usuario_nivel?
  Usuario_activo   Boolean?                   @default(true)
  ID_Cliente       Int?
  ID_Tecnico       Int?

  cliente          tb_cliente?               @relation(fields: [ID_Cliente], references: [ID_Cliente])
  tecnico          tb_tecnico?               @relation(fields: [ID_Tecnico], references: [ID_Tecnico])
  notificaciones   tb_notificacion[]
  estados_aprobados tb_estado_reparacion[] @relation("UsuarioAprobador")

  @@index([ID_Usuario], map: "idx_usuario_id")
  @@index([ID_Cliente])
  @@index([ID_Tecnico])
}

enum tb_usuario_Usuario_nivel {
  Cliente
  Tecnico
  Admin
}